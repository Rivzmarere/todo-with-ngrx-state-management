{"version":3,"file":"ngx-ui-loader.js","sources":["ng://ngx-ui-loader/lib/utils/enums.ts","ng://ngx-ui-loader/lib/utils/constants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/utils/functions.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts","ng://ngx-ui-loader/public-api.ts","ng://ngx-ui-loader/ngx-ui-loader.ts"],"sourcesContent":["/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes'\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right'\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl'\n}\n","import { NgxUiLoaderConfig, Time } from '../utils/interfaces';\nimport { POSITION, PB_DIRECTION, SPINNER } from './enums';\n\n/**\n * The default value of foreground task id\n */\nexport const DEFAULT_FG_TASK_ID = 'fg-default';\n\n/**\n * The default value of background task id\n */\nexport const DEFAULT_BG_TASK_ID = 'bg-default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const DEFAULT_TIME: Time = {};\n\nexport const MIN_DELAY = 0;\n\nexport const MIN_TIME = 0;\n\nexport const CLOSING_TIME = 1001;\n\nexport const FAST_CLOSING_TIME = 601;\n\nexport const BACKGROUND = false;\n\nexport const FOREGROUND = true;\n\nexport const OVERLAY_DISAPPEAR_TIME = 500;\n\nexport const FAST_OVERLAY_DISAPPEAR_TIME = 300;\n\n/**\n * Http loader taskId\n */\nexport const HTTP_LOADER_TASK_ID = '$_http-loader';\n\n/**\n * Router loader taskId\n */\nexport const ROUTER_LOADER_TASK_ID = '$_router_loader';\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple'\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin'\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise'\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating'\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating'\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots'\n  },\n  circle: {\n    divs: 12,\n    class: 'sk-circle'\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid'\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce'\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle'\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube'\n  },\n  pulse: {\n    divs: 1,\n    class: 'sk-pulse'\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce'\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party'\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out'\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane'\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box'\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader'\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce'\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings'\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes'\n  }\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  delay: 0,\n  fastFadeOut: false,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  maxTime: -1,\n  minTime: 300\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport {\n  BACKGROUND,\n  CLOSING_TIME,\n  DEFAULT_BG_TASK_ID,\n  DEFAULT_CONFIG,\n  DEFAULT_FG_TASK_ID,\n  DEFAULT_TIME,\n  FAST_CLOSING_TIME,\n  FOREGROUND,\n  MIN_DELAY,\n  MIN_TIME,\n  OVERLAY_DISAPPEAR_TIME,\n  FAST_OVERLAY_DISAPPEAR_TIME\n} from '../utils/constants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport { Loaders, Loader, ShowEvent, Tasks, Task, Time } from '../utils/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxUiLoaderService {\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n    if (this.config) {\n      if (this.config.minTime && this.config.minTime < MIN_TIME) {\n        this.config.minTime = MIN_TIME;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n  }\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  bindLoaderData(loaderId: string): void {\n    const isMaster = loaderId === this.defaultConfig.masterLoaderId;\n    if (this.loaders[loaderId]) {\n      if (this.loaders[loaderId].isBound) {\n        throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated.`);\n      }\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasRunningTask(FOREGROUND, loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n      } else {\n        if (this.hasRunningTask(BACKGROUND, loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopAllLoader(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of\n   * master loader(if existed). Otherwise null is returned.\n   */\n  getLoader(loaderId?: string): Loader {\n    loaderId = loaderId ? loaderId : this.defaultConfig.masterLoaderId;\n    if (this.loaders[loaderId]) {\n      return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n    }\n    return null;\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  startLoader(loaderId: string, taskId: string = DEFAULT_FG_TASK_ID, time?: Time): void {\n    if (!this.readyToStart(loaderId, taskId, true, time)) {\n      return;\n    }\n    if (!this.loaders[loaderId].tasks[taskId].isOtherRunning) {\n      // no other foreground task running\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  start(taskId: string = DEFAULT_FG_TASK_ID, time?: Time): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_BG_TASK_ID, time?: Time): void {\n    if (!this.readyToStart(loaderId, taskId, false, time)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId) && !this.loaders[loaderId].tasks[taskId].isOtherRunning) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_BG_TASK_ID, time?: Time): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_FG_TASK_ID): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        setTimeout(\n          () => {\n            if (this.hasRunningTask(BACKGROUND, loaderId)) {\n              // still have background tasks\n              this.showBackground.next({ loaderId, isShow: true });\n            }\n          },\n          this.defaultConfig.fastFadeOut ? FAST_OVERLAY_DISAPPEAR_TIME : OVERLAY_DISAPPEAR_TIME\n        );\n      }\n    }\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_FG_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_BG_TASK_ID): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId) && !this.hasRunningTask(BACKGROUND, loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_BG_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   * @param loaderId the loader Id\n   */\n  stopAllLoader(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      console.warn(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n      return;\n    }\n    if (this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasRunningTask(BACKGROUND, loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.clearAllTimers(this.loaders[loaderId].tasks);\n    this.loaders[loaderId].tasks = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopAllLoader(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Create loader data if it does not exist\n   * @docs-private\n   */\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        tasks: {},\n        isMaster,\n        isBound\n      };\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(\n      () => {\n        this.fgClosing.next({ loaderId, isShow: false });\n      },\n      this.defaultConfig.fastFadeOut ? FAST_CLOSING_TIME : CLOSING_TIME\n    );\n  }\n\n  /**\n   * Manage to close background loading\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(\n      () => {\n        this.bgClosing.next({ loaderId, isShow: false });\n      },\n      this.defaultConfig.fastFadeOut ? FAST_CLOSING_TIME : CLOSING_TIME\n    );\n  }\n\n  /**\n   * Clear all timers of the given task\n   * @docs-private\n   */\n  private clearTimers(task: Task): void {\n    clearTimeout(task.delayTimer);\n    clearTimeout(task.maxTimer);\n    clearTimeout(task.minTimer);\n  }\n\n  /**\n   * Clear all timers of the given tasks\n   * @docs-private\n   */\n  private clearAllTimers(tasks: Tasks): void {\n    Object.keys(tasks).map(id => {\n      this.clearTimers(tasks[id]);\n    });\n  }\n\n  /**\n   * Check whether the specified loader has a running task with the given `taskId`.\n   * If no `taskId` specified, it will check whether the loader has any running tasks.\n   * For internal use only.\n   * @docs-private\n   * @param isForeground foreground task or background task\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasRunningTask(isForeground: boolean, loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      const tasks: Tasks = this.loaders[loaderId].tasks;\n      if (taskId) {\n        return tasks[taskId] ? (tasks[taskId].startAt ? true : false) : false;\n      }\n      return Object.keys(tasks).some(id => !!tasks[id].startAt && tasks[id].isForeground === isForeground);\n    }\n    return false;\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStart(loaderId: string, taskId: string, isForeground: boolean, time: Time = DEFAULT_TIME): boolean {\n    this.createLoaderData(loaderId, undefined, false);\n    const isOtherRunning = this.hasRunningTask(isForeground, loaderId);\n    if (!this.loaders[loaderId].tasks[taskId]) {\n      this.loaders[loaderId].tasks[taskId] = {\n        taskId,\n        isForeground,\n        minTime: time.minTime >= MIN_TIME ? time.minTime : this.defaultConfig.minTime,\n        maxTime: time.maxTime ? time.maxTime : this.defaultConfig.maxTime,\n        delay: time.delay >= MIN_DELAY ? time.delay : this.defaultConfig.delay\n      };\n    } else {\n      if (this.loaders[loaderId].tasks[taskId].isForeground !== isForeground) {\n        throw new Error(`[ngx-ui-loader] - taskId \"${taskId}\" is duplicated.`);\n      }\n    }\n    if (this.setDelayTimer(this.loaders[loaderId].tasks[taskId], loaderId)) {\n      return false;\n    }\n    this.loaders[loaderId].tasks[taskId] = {\n      ...this.loaders[loaderId].tasks[taskId],\n      isOtherRunning,\n      startAt: Date.now()\n    };\n    this.setMaxTimer(this.loaders[loaderId].tasks[taskId], loaderId);\n    if (!this.loaders[loaderId].isBound) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStop(loaderId: string, taskId: string): boolean {\n    if (!this.loaders[loaderId]) {\n      console.warn(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n      return false;\n    }\n    const task: Task = this.loaders[loaderId].tasks[taskId];\n    if (!task) {\n      return false;\n    }\n    if (task.isDelayed) {\n      this.clearTimers(task);\n      delete this.loaders[loaderId].tasks[taskId];\n      return false;\n    }\n    if (this.setMinTimer(task, loaderId)) {\n      return false;\n    }\n    this.clearTimers(task);\n    delete this.loaders[loaderId].tasks[taskId];\n    return true;\n  }\n\n  /**\n   * Set delay timer, if `delay` > 0\n   * @docs-private\n   * @returns boolean\n   */\n  private setDelayTimer(task: Task, loaderId: string): boolean {\n    if (task.delay > MIN_DELAY) {\n      if (task.isDelayed) {\n        return true;\n      }\n      if (!task.delayTimer) {\n        task.isDelayed = true;\n        task.delayTimer = setTimeout(() => {\n          task.isDelayed = false;\n          if (task.isForeground) {\n            this.startLoader(loaderId, task.taskId);\n          } else {\n            this.startBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.delay);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set maxTimer if `maxTime` > `minTime`\n   * @docs-private\n   * @returns boolean\n   */\n  private setMaxTimer(task: Task, loaderId: string): void {\n    if (task.maxTime > task.minTime) {\n      // restart the task, reset maxTimer\n      clearTimeout(task.maxTimer);\n      task.maxTimer = setTimeout(() => {\n        if (task.isForeground) {\n          this.stopLoader(loaderId, task.taskId);\n        } else {\n          this.stopBackgroundLoader(loaderId, task.taskId);\n        }\n      }, task.maxTime);\n    }\n  }\n\n  /**\n   * Set minTimer if `startAt` + `minTime` > `Date.now()`\n   * @docs-private\n   * @returns boolean\n   */\n  private setMinTimer(task: Task, loaderId: string): boolean {\n    const now = Date.now();\n    if (task.startAt) {\n      if (task.startAt + task.minTime > now) {\n        task.minTimer = setTimeout(() => {\n          if (task.isForeground) {\n            this.stopLoader(loaderId, task.taskId);\n          } else {\n            this.stopBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.startAt + task.minTime - now);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  TemplateRef\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport { DirectionType, PositionType, SpinnerType } from '../utils/types';\nimport { POSITION } from '../utils/enums';\nimport { SPINNER_CONFIG } from '../utils/constants';\nimport { ShowEvent } from '../utils/interfaces';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsTemplate: TemplateRef<any>;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsTemplate: TemplateRef<any>;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fastFadeOut: boolean;\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(private domSanitizer: DomSanitizer, private changeDetectorRef: ChangeDetectorRef, private ngxService: NgxUiLoaderService) {\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fastFadeOut = this.defaultConfig.fastFadeOut;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.bindLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showForeground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showBackground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.foregroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.backgroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    this.determinePositions();\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // logo, spinner and text\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`\n          );\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`\n          );\n        } else {\n          // logo and spinner\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // spinner and text\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\n        }\n      }\n    } else {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter && this.text && this.textPosition === POSITION.centerCenter) {\n        // logo and text\n        this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n        this.textTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n      }\n    }\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { ShowEvent } from '../utils/interfaces';\nimport { FOREGROUND, OVERLAY_DISAPPEAR_TIME, FAST_OVERLAY_DISAPPEAR_TIME } from '../utils/constants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n  @Input() blur: number;\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n  fastFadeOut: boolean;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private loader: NgxUiLoaderService) {\n    this.blur = this.loader.getDefaultConfig().blur;\n    this.loaderId = this.loader.getDefaultConfig().masterLoaderId;\n    this.fastFadeOut = this.loader.getDefaultConfig().fastFadeOut;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.loader.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        if (data.isShow) {\n          const filterValue = `blur(${this.blur}px)`;\n          this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\n          this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\n        } else {\n          setTimeout(\n            () => {\n              if (!this.loader.hasRunningTask(FOREGROUND, data.loaderId)) {\n                this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\n                this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\n              }\n            },\n            this.fastFadeOut ? FAST_OVERLAY_DISAPPEAR_TIME : OVERLAY_DISAPPEAR_TIME\n          );\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective],\n  exports: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective]\n})\nexport class NgxUiLoaderModule {\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders<NgxUiLoaderModule> {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\n","import { Config, Exclude } from './interfaces';\n\nexport function getExcludeObj(config: Config): Exclude {\n  let strs: string[];\n  let regExps: RegExp[];\n\n  if (config) {\n    if (config.exclude) {\n      strs = config.exclude.map(url => url.toLowerCase());\n    }\n\n    if (config.excludeRegexp) {\n      regExps = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\n    }\n  }\n\n  return { strs, regExps };\n}\n\nexport function isIgnored(url: string, excludeStrings: string[], excludeRegexps: RegExp[]): boolean {\n  if (excludeStrings) {\n    // do not show the loader for urls in the `exclude` list\n    if (excludeStrings.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\n      return true;\n    }\n  }\n\n  if (excludeRegexps) {\n    // do not show the loader for urls which matches regexps in the `excludeRegexp` list\n    if (excludeRegexps.findIndex(regexp => regexp.test(url)) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent } from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n  private exclude: Exclude;\n\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders<NgxUiLoaderRouterModule> {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig\n        }\n      ]\n    };\n  }\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) customConfig: NgxUiLoaderRouterConfig,\n    router: Router,\n    loader: NgxUiLoaderService\n  ) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n\n    let config: NgxUiLoaderRouterConfig = {\n      loaderId: loader.getDefaultConfig().masterLoaderId,\n      showForeground: true\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      config = { ...config, ...customConfig };\n    }\n\n    router.events.subscribe((event: RouterEvent) => {\n      if (event instanceof NavigationStart) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.startLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.startBackgroundLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          }\n        }\n      }\n\n      if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.stopLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.stopBackgroundLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          }\n        }\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { HTTP_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n  private count: number;\n  private config: NgxUiLoaderHttpConfig;\n  private exclude: Exclude;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) customConfig: NgxUiLoaderHttpConfig,\n    private loader: NgxUiLoaderService\n  ) {\n    this.count = 0;\n    this.config = {\n      loaderId: this.loader.getDefaultConfig().masterLoaderId,\n      showForeground: false\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      this.config = { ...this.config, ...customConfig };\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (isIgnored(req.url, this.exclude.strs, this.exclude.regExps)) {\n      return next.handle(req);\n    }\n\n    this.count++;\n    if (this.config.showForeground) {\n      this.loader.startLoader(this.config.loaderId, HTTP_LOADER_TASK_ID, this.config);\n    } else {\n      this.loader.startBackgroundLoader(this.config.loaderId, HTTP_LOADER_TASK_ID, this.config);\n    }\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.count--;\n        if (this.count === 0) {\n          if (this.config.showForeground) {\n            this.loader.stopLoader(this.config.loaderId, HTTP_LOADER_TASK_ID);\n          } else {\n            this.loader.stopBackgroundLoader(this.config.loaderId, HTTP_LOADER_TASK_ID);\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class NgxUiLoaderHttpModule {\n  /**\n   * Constructor\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n  }\n\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders<NgxUiLoaderHttpModule> {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-ui-loader\n */\n\nexport { NgxUiLoaderService } from './lib/core/ngx-ui-loader.service';\nexport { NgxUiLoaderModule } from './lib/core/ngx-ui-loader.module';\nexport { SPINNER, POSITION, PB_DIRECTION } from './lib/utils/enums';\nexport {\n  Loader,\n  Loaders,\n  NgxUiLoaderConfig,\n  NgxUiLoaderHttpConfig,\n  NgxUiLoaderRouterConfig,\n  Task,\n  Tasks,\n  Time\n} from './lib/utils/interfaces';\nexport { NgxUiLoaderRouterModule } from './lib/router/ngx-ui-loader-router.module';\nexport { NgxUiLoaderHttpModule } from './lib/http/ngx-ui-loader-http.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxUiLoaderBlurredDirective as ɵc} from './lib/core/ngx-ui-loader-blurred.directive';\nexport {NGX_UI_LOADER_CONFIG_TOKEN as ɵa} from './lib/core/ngx-ui-loader-config.token';\nexport {NgxUiLoaderComponent as ɵb} from './lib/core/ngx-ui-loader.component';\nexport {NGX_UI_LOADER_HTTP_CONFIG_TOKEN as ɵf} from './lib/http/ngx-ui-loader-http-config.token';\nexport {NgxUiLoaderHttpInterceptor as ɵe} from './lib/http/ngx-ui-loader-http.interceptor';\nexport {NGX_UI_LOADER_ROUTER_CONFIG_TOKEN as ɵd} from './lib/router/ngx-ui-loader-router-config.token';"],"names":[],"mappings":"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"}