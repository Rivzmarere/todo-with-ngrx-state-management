{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/runtime/nx/data-persistence.ts","../../src/runtime/nx/nx.module.ts"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","pessimisticUpdate","opts","source","pipe","mapActionAndState","concatMap","runWithErrorHandling","run","onError","optimisticUpdate","undoAction","fetch","id","groupBy","_a","_b","action","store","mergeMap","pairs","switchMap","navigation","component","filter","isStateSnapshot","map","state","findSnapshot","payload","routerState","root","snapshot","type","ROUTER_NAVIGATION","wrapIntoObservable","catchError","args","Array","normalizeActionAndState","DataPersistence","actions","this","prototype","actionType","ofType","withLatestFrom","routeConfig","children","_c","ss","obj","isObservable","of","Injectable","Store","Actions","NxModule","forRoot","ngModule","providers","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Type } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { ROUTER_NAVIGATION, RouterNavigationAction } from '@ngrx/router-store';\nimport { Action, Store, ActionCreator } from '@ngrx/store';\nimport { isObservable, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n/**\n * See {@link DataPersistence.pessimisticUpdate} for more information.\n */\nexport interface PessimisticUpdateOpts<T, A> {\n  run(a: A, state?: T): Observable<Action> | Action | void;\n  onError(a: A, e: any): Observable<any> | any;\n}\n/**\n * See {@link DataPersistence.pessimisticUpdate} for more information.\n */\nexport interface OptimisticUpdateOpts<T, A> {\n  run(a: A, state?: T): Observable<Action> | Action | void;\n  undoAction(a: A, e: any): Observable<Action> | Action;\n}\n\n/**\n * See {@link DataPersistence.fetch} for more information.\n */\nexport interface FetchOpts<T, A> {\n  id?(a: A, state?: T): any;\n  run(a: A, state?: T): Observable<Action> | Action | void;\n  onError?(a: A, e: any): Observable<any> | any;\n}\n\n/**\n * See {@link DataPersistence.navigation} for more information.\n */\nexport interface HandleNavigationOpts<T> {\n  run(a: ActivatedRouteSnapshot, state?: T): Observable<Action> | Action | void;\n  onError?(a: ActivatedRouteSnapshot, e: any): Observable<any> | any;\n}\n\nexport type ActionOrActionWithState<T, A> = A | [A, T];\nexport type ActionStateStream<T, A> = Observable<ActionOrActionWithState<T, A>>;\n\nexport function pessimisticUpdate<T, A extends Action>(\n  opts: PessimisticUpdateOpts<T, A>\n) {\n  return (source: ActionStateStream<T, A>): Observable<Action> => {\n    return source.pipe(\n      mapActionAndState(),\n      concatMap(runWithErrorHandling(opts.run, opts.onError))\n    );\n  };\n}\n\nexport function optimisticUpdate<T, A extends Action>(\n  opts: OptimisticUpdateOpts<T, A>\n) {\n  return (source: ActionStateStream<T, A>): Observable<Action> => {\n    return source.pipe(\n      mapActionAndState(),\n      concatMap(runWithErrorHandling(opts.run, opts.undoAction))\n    );\n  };\n}\n\nexport function fetch<T, A extends Action>(opts: FetchOpts<T, A>) {\n  return (source: ActionStateStream<T, A>): Observable<Action> => {\n    if (opts.id) {\n      const groupedFetches = source.pipe(\n        mapActionAndState(),\n        groupBy(([action, store]) => {\n          return opts.id(action, store);\n        })\n      );\n\n      return groupedFetches.pipe(\n        mergeMap((pairs) =>\n          pairs.pipe(switchMap(runWithErrorHandling(opts.run, opts.onError)))\n        )\n      );\n    }\n\n    return source.pipe(\n      mapActionAndState(),\n      concatMap(runWithErrorHandling(opts.run, opts.onError))\n    );\n  };\n}\n\nexport function navigation<T, A extends Action>(\n  component: Type<any>,\n  opts: HandleNavigationOpts<T>\n) {\n  return (source: ActionStateStream<T, A>) => {\n    const nav = source.pipe(\n      mapActionAndState(),\n      filter(([action, state]) => isStateSnapshot(action)),\n      map(([action, state]) => {\n        if (!isStateSnapshot(action)) {\n          // Because of the above filter we'll never get here,\n          // but this properly type narrows `action`\n          return;\n        }\n\n        return [\n          findSnapshot(component, action.payload.routerState.root),\n          state,\n        ] as [ActivatedRouteSnapshot, T];\n      }),\n      filter(([snapshot, state]) => !!snapshot)\n    );\n\n    return nav.pipe(switchMap(runWithErrorHandling(opts.run, opts.onError)));\n  };\n}\n\nfunction isStateSnapshot(\n  action: any\n): action is RouterNavigationAction<RouterStateSnapshot> {\n  return action.type === ROUTER_NAVIGATION;\n}\n\nfunction runWithErrorHandling<T, A, R>(\n  run: (a: A, state?: T) => Observable<R> | R | void,\n  onError: any\n) {\n  return ([action, state]: [A, T]): Observable<R> => {\n    try {\n      const r = wrapIntoObservable(run(action, state));\n      return r.pipe(catchError((e) => wrapIntoObservable(onError(action, e))));\n    } catch (e) {\n      return wrapIntoObservable(onError(action, e));\n    }\n  };\n}\n\n/**\n * @whatItDoes maps Observable<Action | [Action, State]> to\n * Observable<[Action, State]>\n */\nfunction mapActionAndState<T, A>() {\n  return (source: Observable<ActionOrActionWithState<T, A>>) => {\n    return source.pipe(\n      map((value) => {\n        const [action, store] = normalizeActionAndState(value);\n        return [action, store] as [A, T];\n      })\n    );\n  };\n}\n\n/**\n * @whatItDoes Normalizes either a bare action or an array of action and state\n * into an array of action and state (or undefined)\n */\nfunction normalizeActionAndState<T, A>(\n  args: ActionOrActionWithState<T, A>\n): [A, T] {\n  let action: A, state: T;\n\n  if (args instanceof Array) {\n    [action, state] = args;\n  } else {\n    action = args;\n  }\n\n  return [action, state];\n}\n\n/**\n * @whatItDoes Provides convenience methods for implementing common operations of persisting data.\n */\n@Injectable()\nexport class DataPersistence<T> {\n  constructor(public store: Store<T>, public actions: Actions) {}\n\n  /**\n   *\n   * @whatItDoes Handles pessimistic updates (updating the server first).\n   *\n   * Update the server implemented naively suffers from race conditions and poor error handling.\n   *\n   * `pessimisticUpdate` addresses these problems--it runs all fetches in order, which removes race conditions\n   * and forces the developer to handle errors.\n   *\n   * ## Example:\n   *\n   * ```typescript\n   * @Injectable()\n   * class TodoEffects {\n   *   @Effect() updateTodo = this.s.pessimisticUpdate<UpdateTodo>('UPDATE_TODO', {\n   *     // provides an action and the current state of the store\n   *     run(a, state) {\n   *       // update the backend first, and then dispatch an action that will\n   *       // update the client side\n   *       return this.backend(state.user, a.payload).map(updated => ({\n   *         type: 'TODO_UPDATED',\n   *         payload: updated\n   *       }));\n   *     },\n   *\n   *     onError(a, e: any) {\n   *       // we don't need to undo the changes on the client side.\n   *       // we can dispatch an error, or simply log the error here and return `null`\n   *       return null;\n   *     }\n   *   });\n   *\n   *   constructor(private s: DataPersistence<TodosState>, private backend: Backend) {}\n   * }\n   * ```\n   *\n   * Note that if you don't return a new action from the run callback, you must set the dispatch property\n   * of the effect to false, like this:\n   *\n   * ```\n   * class TodoEffects {\n   *   @Effect({dispatch: false})\n   *   updateTodo; //...\n   * }\n   * ```\n   */\n  pessimisticUpdate<A extends Action = Action>(\n    actionType: string | ActionCreator,\n    opts: PessimisticUpdateOpts<T, A>\n  ): Observable<any> {\n    return this.actions.pipe(\n      ofType<A>(actionType),\n      withLatestFrom(this.store),\n      pessimisticUpdate(opts)\n    );\n  }\n\n  /**\n   *\n   * @whatItDoes Handles optimistic updates (updating the client first).\n   *\n   * `optimisticUpdate` addresses these problems--it runs all fetches in order, which removes race conditions\n   * and forces the developer to handle errors.\n   *\n   * `optimisticUpdate` is different from `pessimisticUpdate`. In case of a failure, when using `optimisticUpdate`,\n   * the developer already updated the state locally, so the developer must provide an undo action.\n   *\n   * The error handling must be done in the callback, or by means of the undo action.\n   *\n   * ## Example:\n   *\n   * ```typescript\n   * @Injectable()\n   * class TodoEffects {\n   *   @Effect() updateTodo = this.s.optimisticUpdate<UpdateTodo>('UPDATE_TODO', {\n   *     // provides an action and the current state of the store\n   *     run: (a, state) => {\n   *       return this.backend(state.user, a.payload);\n   *     },\n   *\n   *     undoAction: (a, e: any) => {\n   *       // dispatch an undo action to undo the changes in the client state\n   *       return ({\n   *         type: 'UNDO_UPDATE_TODO',\n   *         payload: a\n   *       });\n   *     }\n   *   });\n   *\n   *   constructor(private s: DataPersistence<TodosState>, private backend: Backend) {}\n   * }\n   * ```\n   *\n   * Note that if you don't return a new action from the run callback, you must set the dispatch property\n   * of the effect to false, like this:\n   *\n   * ```\n   * class TodoEffects {\n   *   @Effect({dispatch: false})\n   *   updateTodo; //...\n   * }\n   * ```\n   */\n  optimisticUpdate<A extends Action = Action>(\n    actionType: string | ActionCreator,\n    opts: OptimisticUpdateOpts<T, A>\n  ): Observable<any> {\n    return this.actions.pipe(\n      ofType<A>(actionType),\n      withLatestFrom(this.store),\n      optimisticUpdate(opts)\n    );\n  }\n\n  /**\n   *\n   * @whatItDoes Handles data fetching.\n   *\n   * Data fetching implemented naively suffers from race conditions and poor error handling.\n   *\n   * `fetch` addresses these problems--it runs all fetches in order, which removes race conditions\n   * and forces the developer to handle errors.\n   *\n   * ## Example:\n   *\n   * ```typescript\n   * @Injectable()\n   * class TodoEffects {\n   *   @Effect() loadTodos = this.s.fetch<GetTodos>('GET_TODOS', {\n   *     // provides an action and the current state of the store\n   *     run: (a, state) => {\n   *       return this.backend(state.user, a.payload).map(r => ({\n   *         type: 'TODOS',\n   *         payload: r\n   *       });\n   *     },\n   *\n   *     onError: (a, e: any) => {\n   *       // dispatch an undo action to undo the changes in the client state\n   *     }\n   *   });\n   *\n   *   constructor(private s: DataPersistence<TodosState>, private backend: Backend) {}\n   * }\n   * ```\n   *\n   * This is correct, but because it set the concurrency to 1, it may not be performant.\n   *\n   * To fix that, you can provide the `id` function, like this:\n   *\n   * ```typescript\n   * @Injectable()\n   * class TodoEffects {\n   *   @Effect() loadTodo = this.s.fetch<GetTodo>('GET_TODO', {\n   *     id: (a, state) => {\n   *       return a.payload.id;\n   *     }\n   *\n   *     // provides an action and the current state of the store\n   *     run: (a, state) => {\n   *       return this.backend(state.user, a.payload).map(r => ({\n   *         type: 'TODO',\n   *         payload: r\n   *       });\n   *     },\n   *\n   *     onError: (a, e: any) => {\n   *       // dispatch an undo action to undo the changes in the client state\n   *       return null;\n   *     }\n   *   });\n   *\n   *   constructor(private s: DataPersistence<TodosState>, private backend: Backend) {}\n   * }\n   * ```\n   *\n   * With this setup, the requests for Todo 1 will run concurrently with the requests for Todo 2.\n   *\n   * In addition, if DataPersistence notices that there are multiple requests for Todo 1 scheduled,\n   * it will only run the last one.\n   */\n  fetch<A extends Action = Action>(\n    actionType: string | ActionCreator,\n    opts: FetchOpts<T, A>\n  ): Observable<any> {\n    return this.actions.pipe(\n      ofType<A>(actionType),\n      withLatestFrom(this.store),\n      fetch(opts)\n    );\n  }\n\n  /**\n   * @whatItDoes Handles data fetching as part of router navigation.\n   *\n   * Data fetching implemented naively suffers from race conditions and poor error handling.\n   *\n   * `navigation` addresses these problems.\n   *\n   * It checks if an activated router state contains the passed in component type, and, if it does, runs the `run`\n   * callback. It provides the activated snapshot associated with the component and the current state. And it only runs\n   * the last request.\n   *\n   * ## Example:\n   *\n   * ```typescript\n   * @Injectable()\n   * class TodoEffects {\n   *   @Effect() loadTodo = this.s.navigation(TodoComponent, {\n   *     run: (a, state) => {\n   *       return this.backend.fetchTodo(a.params['id']).map(todo => ({\n   *         type: 'TODO_LOADED',\n   *         payload: todo\n   *       }));\n   *     },\n   *     onError: (a, e: any) => {\n   *       // we can log and error here and return null\n   *       // we can also navigate back\n   *       return null;\n   *     }\n   *   });\n   *   constructor(private s: DataPersistence<TodosState>, private backend: Backend) {}\n   * }\n   * ```\n   */\n  navigation(\n    component: Type<any>,\n    opts: HandleNavigationOpts<T>\n  ): Observable<any> {\n    return this.actions.pipe(\n      withLatestFrom(this.store),\n      navigation(component, opts)\n    );\n  }\n}\n\nfunction findSnapshot(\n  component: Type<any>,\n  s: ActivatedRouteSnapshot\n): ActivatedRouteSnapshot {\n  if (s.routeConfig && s.routeConfig.component === component) {\n    return s;\n  }\n  for (const c of s.children) {\n    const ss = findSnapshot(component, c);\n    if (ss) {\n      return ss;\n    }\n  }\n  return null;\n}\n\nfunction wrapIntoObservable<O>(obj: Observable<O> | O | void): Observable<O> {\n  if (isObservable(obj)) {\n    return obj;\n  } else if (!obj) {\n    return of();\n  } else {\n    return of(obj as O);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { DataPersistence } from './data-persistence';\n\n/**\n * @whatItDoes Provides services for enterprise Angular applications.\n *\n * See {@link DataPersistence} for more information.\n */\n@NgModule({})\nexport class NxModule {\n  static forRoot(): ModuleWithProviders<NxModule> {\n    return { ngModule: NxModule, providers: [DataPersistence] };\n  }\n}\n"]}