{"version":3,"sources":["../../testing/src/testing-utils.ts"],"names":["o","pipe","toArray","toPromise","first"],"mappings":"6yBAe2BA,GACzB,OAAOA,EAAEC,KAAKC,EAAAA,WAAWC,kCAeEH,GAC3B,OAAOA,EAAEC,KAAKG,EAAAA,SAASD","sourcesContent":["import { Observable } from 'rxjs';\nimport { first, toArray } from 'rxjs/operators';\n\n/**\n * @whatItDoes reads all the values from an observable and returns a promise\n * with an array of all values. This should be used in combination with async/await.\n *\n * ## Example\n *\n * ```typescript\n * const obs = of(1, 2, 3, 4);\n * const res = await readAll(obs)\n * expect(res).toEqual([1, 2, 3, 4]);\n * ```\n */\nexport function readAll<T>(o: Observable<T>): Promise<T[]> {\n  return o.pipe(toArray()).toPromise();\n}\n\n/**\n * @whatItDoes reads the first value from an observable and returns a promise\n * with it. This should be used in combination with async/await.\n *\n * ## Example\n *\n * ```typescript\n * const obs = of(1, 2, 3, 4);\n * const res = await readFirst(obs)\n * expect(res).toEqual(1);\n * ```\n */\nexport function readFirst<T>(o: Observable<T>): Promise<T> {\n  return o.pipe(first()).toPromise();\n}\n"]}